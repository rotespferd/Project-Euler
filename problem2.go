/*
* Problem 2: Even Fibonacci numbers
* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*
* By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*
* http://projecteuler.net/problem=2
 */

package main

import (
	"fmt"
)

func main() {

	var target int
	var sum int
	var currentTerm int
	var i int

	target = 4000000

	currentTerm = 0
	i = 1

	sum = 0

	for currentTerm < target {
		currentTerm = fib(i)

		if currentTerm%2 == 0 {
			sum += currentTerm
		}
		i++
	}

	fmt.Printf("The sum is %v\n", sum)

}

func fib(i int) int {
	if i == 1 || i == 2 {
		return 1
	} else {
		return fib(i-1) + fib(i-2)
	}
}
